---
import Layout from "../../layouts/Layout.astro";
import Hero from "../../components/Hero.astro";
import WorkshopGridIsland from "../../components/islands/WorkshopGridIsland.jsx";
import { getContent } from "../../content";
import { supportedLanguages, defaultLanguage } from "../../content/i18n";
import {
    getWorkshopsForLanguage,
    prepareWorkshopData,
} from "../../content/workshopHelpers";

// Get language from URL
const { lang } = Astro.params;
const currentLang = lang || defaultLanguage;
const content = getContent(currentLang as any);
const { workshops: workshopsPageContent } = content.pages;

// Get workshops for the current language
const workshops = await getWorkshopsForLanguage(currentLang);

// Transform workshops data for the island component
const workshopsData = prepareWorkshopData(workshops, currentLang);

const heroContent = workshopsPageContent.hero;

// Export for static generation of language routes
export function getStaticPaths() {
    return supportedLanguages
        .filter((lang) => lang !== defaultLanguage)
        .map((lang) => ({
            params: { lang },
        }));
}
---

<Layout
    title={`${currentLang === "ar" ? "ورش العمل" : currentLang === "en" ? "Workshops" : "Workshops"} - CoderDojo Schöneweide`}
    description={content.site.description}
>
    <Hero hero={heroContent} />

    <!-- Workshop Grid Section -->
    <section
        class="py-20 bg-white dark:bg-gray-900 text-accent-900 dark:text-gray-100"
        dir={currentLang === "ar" ? "rtl" : "ltr"}
    >
        <div class="container mx-auto px-6">
            <WorkshopGridIsland
                workshops={workshopsData}
                labels={workshopsPageContent.labels}
                client:load
            />
        </div>
    </section>
</Layout>
