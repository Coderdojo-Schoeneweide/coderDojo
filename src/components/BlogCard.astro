---
// BlogCard - Simple blog post card component without interactivity
import type { BlogPost } from "../utils/blog";

interface Props {
    post: BlogPost;
}

const { post } = Astro.props;

// Format date for display
function formatDate(dateStr: string): string {
    try {
        const date = new Date(dateStr);
        return date.toLocaleDateString("de-DE", {
            year: "numeric",
            month: "long",
            day: "numeric",
        });
    } catch {
        return dateStr;
    }
}
---

<article
    class="bg-white dark:bg-slate-800 rounded-lg shadow-md hover:shadow-lg transition-shadow duration-300 overflow-hidden"
>
    <!-- Post Content -->
    <div class="p-6">
        <!-- Title -->
        <h2
            class="text-xl font-bold text-slate-900 dark:text-slate-100 mb-3 line-clamp-2"
        >
            <a
                href={post.url}
                class="hover:text-primary-600 dark:hover:text-primary-400 transition-colors"
            >
                {post.title}
            </a>
        </h2>

        <!-- Excerpt -->
        <p class="text-slate-600 dark:text-slate-300 mb-4 line-clamp-3">
            {post.excerpt}
        </p>

        <!-- Meta Information -->
        <div
            class="flex flex-col sm:flex-row sm:items-center sm:justify-between text-sm text-slate-500 dark:text-slate-400 mb-4"
        >
            <div class="flex items-center space-x-4 mb-2 sm:mb-0">
                <!-- Date -->
                <span class="flex items-center space-x-1">
                    <svg
                        class="w-4 h-4"
                        fill="currentColor"
                        viewBox="0 0 20 20"
                    >
                        <path
                            fill-rule="evenodd"
                            d="M6 2a1 1 0 00-1 1v1H4a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V6a2 2 0 00-2-2h-1V3a1 1 0 10-2 0v1H7V3a1 1 0 00-1-1zm0 5a1 1 0 000 2h8a1 1 0 100-2H6z"
                            clip-rule="evenodd"></path>
                    </svg>
                    <span>{formatDate(post.publishDate)}</span>
                </span>

                <!-- Reading Time -->
                {
                    post.readingTime && (
                        <span class="flex items-center space-x-1">
                            <svg
                                class="w-4 h-4"
                                fill="currentColor"
                                viewBox="0 0 20 20"
                            >
                                <path
                                    fill-rule="evenodd"
                                    d="M10 18a8 8 0 100-16 8 8 0 000 16zm1-12a1 1 0 10-2 0v4a1 1 0 00.293.707l2.828 2.829a1 1 0 101.415-1.415L11 9.586V6z"
                                    clip-rule="evenodd"
                                />
                            </svg>
                            <span>{post.readingTime}</span>
                        </span>
                    )
                }
            </div>

            <!-- Authors -->
            {
                post.authors.length > 0 && (
                    <div class="flex items-center space-x-1">
                        <svg
                            class="w-4 h-4"
                            fill="currentColor"
                            viewBox="0 0 20 20"
                        >
                            <path
                                fill-rule="evenodd"
                                d="M10 9a3 3 0 100-6 3 3 0 000 6zm-7 9a7 7 0 1114 0H3z"
                                clip-rule="evenodd"
                            />
                        </svg>
                        <span>{post.authors.join(", ")}</span>
                    </div>
                )
            }
        </div>

        <!-- Tags -->
        {
            post.tags.length > 0 && (
                <div class="flex flex-wrap gap-2 mb-4">
                    {post.tags.slice(0, 3).map((tag) => (
                        <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-primary-100 dark:bg-primary-900 text-primary-800 dark:text-primary-200">
                            #{tag}
                        </span>
                    ))}
                    {post.tags.length > 3 && (
                        <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-slate-100 dark:bg-slate-700 text-slate-600 dark:text-slate-300">
                            +{post.tags.length - 3}
                        </span>
                    )}
                </div>
            )
        }

        <!-- Read More Button -->
        <a
            href={post.url}
            class="inline-flex items-center text-primary-600 dark:text-primary-400 hover:text-primary-700 dark:hover:text-primary-300 font-medium text-sm transition-colors group"
        >
            Weiterlesen
            <svg
                class="w-4 h-4 ml-1 group-hover:translate-x-1 transition-transform"
                fill="currentColor"
                viewBox="0 0 20 20"
            >
                <path
                    fill-rule="evenodd"
                    d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 111.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z"
                    clip-rule="evenodd"></path>
            </svg>
        </a>
    </div>
</article>

<style>
    .line-clamp-2 {
        display: -webkit-box;
        -webkit-line-clamp: 2;
        -webkit-box-orient: vertical;
        overflow: hidden;
    }

    .line-clamp-3 {
        display: -webkit-box;
        -webkit-line-clamp: 3;
        -webkit-box-orient: vertical;
        overflow: hidden;
    }
</style>
