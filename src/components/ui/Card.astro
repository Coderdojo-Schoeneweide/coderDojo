---
export interface Props {
    title: string;
    description: string;
    icon?: string;
    tags?: string[];
    metadata?: { label: string; value: string }[];
    className?: string;
}

const {
    title,
    description,
    icon,
    tags = [],
    metadata = [],
    className = "",
} = Astro.props;
---

<div
    class={`rounded-3xl bg-white/90 dark:bg-[#222222cc] shadow-xl flex flex-col overflow-hidden ${className}`}
>
    {
        icon && (
            <div class="h-48 w-full bg-orange-50 dark:bg-orange-900/20 flex items-center justify-center text-7xl">
                <span aria-hidden="true">{icon}</span>
            </div>
        )
    }

    <div class="flex-1 flex flex-col p-6">
        <h2 class="text-2xl font-bold text-orange-500 mb-2">
            {title}
        </h2>

        <p class="text-gray-700 dark:text-gray-200 mb-4 flex-1">
            {description}
        </p>

        {
            tags.length > 0 && (
                <div class="mb-2 flex flex-wrap gap-2">
                    {tags.map((tag) => (
                        <span class="bg-orange-200 text-orange-700 px-2 py-1 rounded text-xs font-semibold">
                            {tag}
                        </span>
                    ))}
                </div>
            )
        }

        {
            metadata.length > 0 && (
                <div class="flex items-center justify-between text-sm text-gray-500 dark:text-gray-300 mt-2">
                    {metadata.map((item) => (
                        <span>
                            {item.label}: {item.value}
                        </span>
                    ))}
                </div>
            )
        }
    </div>
</div>
